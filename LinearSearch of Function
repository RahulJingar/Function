//position of elements 
#include<iostream>
using namespace std;
int linearSearch(int arr[],int size,int key)
{
	int start=0;
	int end=size-1;
	int mid=(start+end)/2;
	while(start<=end)
	{
		if(arr[mid]==key)
		{
			return mid;
		}
		if(key>arr[mid])
		{
			start=mid+1;
		}
		else
		{
			end=mid-1;
		}
		mid=(start+end)/2;
	}
	return -1;
}
int main()
{
	int arr[6] = {2,4,6,8,10,12};
	int ans =  linearSearch(arr,6,12);
	cout<<"Index of 12 is:"<<ans<<endl;
}





// first and last position of an elementin sorted array

#include<iostream>
using namespace std;
int firstIndex(int arr[],int size,int key)
{
	int start=0;
	int end=size-1;
	int mid=(start+end)/2;
	int ans=-1;
	while(start<=end)
	{
		if(arr[mid]==key)
		{
			ans=mid;
			end=mid-1;
		}
		if(key>arr[mid])
		{
			start=mid+1;
		}
		else
		{
			end=mid-1;
		}
		mid=(start+end)/2;
	}
	return ans;
}
int lastIndex(int arr[],int size,int key)
{
	int start=0;
	int end=size-1;
	int mid=(start+end)/2;
	int ans = -1;
	while(start<=end)
	{
		if(arr[mid]==key)
		{
			ans=mid;
			start=mid+1;
		}
		if(key>arr[mid])
		{
			start=mid+1;
		}
		else
		{
			end=mid-1;
		}
		mid=(start+end)/2;
	}
	return ans;
}
int main()
{
	int arr[5] = {1,2,3,3,5};
	int ans =  firstIndex(arr,5,3);
	int ans2 = lastIndex(arr,5,5);
	cout<<"first index of:"<<ans<<endl;
	cout<<"last index of:"<<ans2<<endl;
}


